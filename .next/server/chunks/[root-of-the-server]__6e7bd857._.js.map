{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/ticket-utils.ts"],"sourcesContent":["/**\n * Generate a unique serial number for the ticket\n * Format: VGE-{timestamp}-{random}\n */\nexport function generateSerialNumber(): string {\n  const timestamp = Date.now().toString()\n  const random = Math.floor(Math.random() * 9999).toString().padStart(4, '0')\n  return `VGE-${timestamp}-${random}`\n}\n\n/**\n * Convert file to base64 string\n */\nexport function fileToBase64(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = () => resolve(reader.result as string)\n    reader.onerror = error => reject(error)\n  })\n}\n\n/**\n * Validate image file\n */\nexport function validateImageFile(file: File): { isValid: boolean; error?: string } {\n  const maxSize = 5 * 1024 * 1024 // 5MB\n  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp']\n\n  if (!allowedTypes.includes(file.type)) {\n    return {\n      isValid: false,\n      error: 'Please upload a valid image file (JPEG, PNG, GIF, or WebP)'\n    }\n  }\n\n  if (file.size > maxSize) {\n    return {\n      isValid: false,\n      error: 'Image size must be less than 5MB'\n    }\n  }\n\n  return { isValid: true }\n}\n\n/**\n * Format date for display\n */\nexport function formatEventDate(date: Date): string {\n  return date.toLocaleDateString('en-US', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  })\n}\n\n/**\n * Get random position for serial number overlay\n */\nexport function getRandomPosition(): { top: string; left: string } {\n  const positions = [\n    { top: '10%', left: '10%' },\n    { top: '10%', left: '80%' },\n    { top: '80%', left: '10%' },\n    { top: '80%', left: '80%' },\n    { top: '50%', left: '5%' },\n    { top: '50%', left: '85%' },\n  ]\n  \n  return positions[Math.floor(Math.random() * positions.length)]\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;;AACM,SAAS;IACd,MAAM,YAAY,KAAK,GAAG,GAAG,QAAQ;IACrC,MAAM,SAAS,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG;IACvE,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE,QAAQ;AACrC;AAKO,SAAS,aAAa,IAAU;IACrC,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,MAAM,SAAS,IAAI;QACnB,OAAO,aAAa,CAAC;QACrB,OAAO,MAAM,GAAG,IAAM,QAAQ,OAAO,MAAM;QAC3C,OAAO,OAAO,GAAG,CAAA,QAAS,OAAO;IACnC;AACF;AAKO,SAAS,kBAAkB,IAAU;IAC1C,MAAM,UAAU,IAAI,OAAO,KAAK,MAAM;;IACtC,MAAM,eAAe;QAAC;QAAc;QAAa;QAAa;QAAa;KAAa;IAExF,IAAI,CAAC,aAAa,QAAQ,CAAC,KAAK,IAAI,GAAG;QACrC,OAAO;YACL,SAAS;YACT,OAAO;QACT;IACF;IAEA,IAAI,KAAK,IAAI,GAAG,SAAS;QACvB,OAAO;YACL,SAAS;YACT,OAAO;QACT;IACF;IAEA,OAAO;QAAE,SAAS;IAAK;AACzB;AAKO,SAAS,gBAAgB,IAAU;IACxC,OAAO,KAAK,kBAAkB,CAAC,SAAS;QACtC,SAAS;QACT,MAAM;QACN,OAAO;QACP,KAAK;IACP;AACF;AAKO,SAAS;IACd,MAAM,YAAY;QAChB;YAAE,KAAK;YAAO,MAAM;QAAM;QAC1B;YAAE,KAAK;YAAO,MAAM;QAAM;QAC1B;YAAE,KAAK;YAAO,MAAM;QAAM;QAC1B;YAAE,KAAK;YAAO,MAAM;QAAM;QAC1B;YAAE,KAAK;YAAO,MAAM;QAAK;QACzB;YAAE,KAAK;YAAO,MAAM;QAAM;KAC3B;IAED,OAAO,SAAS,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,UAAU,MAAM,EAAE;AAChE","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api/generate-ticket/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { generateSerialNumber } from '@/lib/ticket-utils'\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json()\n    const { playerName, imageData } = body\n\n    // Validate required fields\n    if (!playerName || !imageData) {\n      return NextResponse.json(\n        { error: 'Player name and image are required' },\n        { status: 400 }\n      )\n    }\n\n    // Validate player name\n    if (typeof playerName !== 'string' || playerName.trim().length === 0) {\n      return NextResponse.json(\n        { error: 'Please provide a valid player name' },\n        { status: 400 }\n      )\n    }\n\n    // Validate image data\n    if (typeof imageData !== 'string' || !imageData.startsWith('data:image/')) {\n      return NextResponse.json(\n        { error: 'Please provide a valid image' },\n        { status: 400 }\n      )\n    }\n\n    // Generate unique serial number\n    const serialNumber = generateSerialNumber()\n\n    // Event details (can be made configurable later)\n    const eventDetails = {\n      name: 'Video Game Championship 2024',\n      date: '2024-12-25',\n      venue: 'Gaming Arena Center',\n      time: '7:00 PM - 11:00 PM',\n      category: 'VIP Access'\n    }\n\n    // Return ticket data\n    const ticketData = {\n      serialNumber,\n      playerName: playerName.trim(),\n      imageData,\n      eventDetails,\n      generatedAt: new Date().toISOString()\n    }\n\n    return NextResponse.json(ticketData, { status: 200 })\n\n  } catch (error) {\n    console.error('Error generating ticket:', error)\n    return NextResponse.json(\n      { error: 'Failed to generate ticket. Please try again.' },\n      { status: 500 }\n    )\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG;QAElC,2BAA2B;QAC3B,IAAI,CAAC,cAAc,CAAC,WAAW;YAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAqC,GAC9C;gBAAE,QAAQ;YAAI;QAElB;QAEA,uBAAuB;QACvB,IAAI,OAAO,eAAe,YAAY,WAAW,IAAI,GAAG,MAAM,KAAK,GAAG;YACpE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAqC,GAC9C;gBAAE,QAAQ;YAAI;QAElB;QAEA,sBAAsB;QACtB,IAAI,OAAO,cAAc,YAAY,CAAC,UAAU,UAAU,CAAC,gBAAgB;YACzE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA+B,GACxC;gBAAE,QAAQ;YAAI;QAElB;QAEA,gCAAgC;QAChC,MAAM,eAAe,CAAA,GAAA,+HAAA,CAAA,uBAAoB,AAAD;QAExC,iDAAiD;QACjD,MAAM,eAAe;YACnB,MAAM;YACN,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;QACZ;QAEA,qBAAqB;QACrB,MAAM,aAAa;YACjB;YACA,YAAY,WAAW,IAAI;YAC3B;YACA;YACA,aAAa,IAAI,OAAO,WAAW;QACrC;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,YAAY;YAAE,QAAQ;QAAI;IAErD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA+C,GACxD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}